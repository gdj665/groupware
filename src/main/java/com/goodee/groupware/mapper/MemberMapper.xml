<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.goodee.groupware.mapper.MemberMapper">
	<!-- id 체크 및 부서번호, 직급 -->
	<select id="checkMember"
			parameterType="com.goodee.groupware.vo.Member"
			resultType="com.goodee.groupware.vo.Member">
		SELECT m.department_no departmentNo, d.department_parent_no departmentParentNo, m.member_level memberLevel, count(*) cnt
		FROM member m inner join department d
				on m.department_no = d.department_no
		<where>
			<if test="memberPw.equals(&quot;1234&quot;)">
				member_id = #{memberId}
				AND member_pw = #{memberPw}
			</if>
			<if test="!memberPw.equals(&quot;1234&quot;)">
				member_id = #{memberId}
				AND member_pw = PASSWORD(#{memberPw})
			</if>
		</where>
	</select>
	
	<!-- 비밀번호 수정 -->
	<update id="updatePw"
			parameterType="com.goodee.groupware.vo.Member">
		UPDATE member
		SET member_pw = PASSWORD(#{memberPw}),
			updatedate = NOW()
		WHERE member_id = #{memberId}
	</update>
	
	<!-- 마이페이지 수정 -->
	<update id="updateOneMember"
			parameterType="com.goodee.groupware.vo.Member">
		UPDATE member
		SET member_name = #{memberName},
			member_phone = #{memberPhone},
			member_email = #{memberEmail},
			member_address = #{memberAddress},
			updatedate = NOW()
		WHERE member_id = #{memberId}
	</update>
	
	<!-- 사인 수정 -->
	<update id="updateSign"
			parameterType="com.goodee.groupware.vo.Member">
		UPDATE member
		SET member_sign_file = #{memberSignFile},
			updatedate = NOW()
		WHERE member_id = #{memberId}
	</update>
	
	<!-- 근태 출력 -->
	<select id="getWorkList"
			parameterType="java.util.Map"
			resultType="com.goodee.groupware.vo.Work">
		SELECT work_begin workBegin, work_end workEnd, work_date workDate, work_annual workAnnual
		FROM work
		WHERE member_id = #{memberId}
		AND YEAR(work_date) = #{targetYear}
		AND MONTH(work_date) = #{targetMonth}
	</select>
	
	<!-- 출근 입력 -->
	<insert id="addWorkBegin"
			parameterType="com.goodee.groupware.vo.Work">
		INSERT INTO work(member_id, work_begin, work_date, createdate, updatedate)
		VALUES(#{memberId}, #{workBegin}, #{workDate}, NOW(), NOW())
	</insert>

	<!-- 퇴근 입력 -->
	<update id="addWorkEnd"
			parameterType="com.goodee.groupware.vo.Work">
		UPDATE work
		SET work_end = #{workEnd},
			updatedate = NOW()
		WHERE member_id = #{memberId}
		AND work_date = #{workDate}
	</update>

	<!-- 연차 입력 -->
	<insert id="addWorkAnnual"
			parameterType="com.goodee.groupware.vo.Work">
		INSERT INTO work(work_date, work_annual createdate, updatedate)
		VALUES(#{workDate}, #{workAnnual}, NOW(), NOW())
	</insert>
	
	<!-- 출근 유의성 검사 -->
	<select id="checkWork"
			parameterType="com.goodee.groupware.vo.Work"
			resultType="int">
		SELECT COUNT(*) cnt
		FROM work
		WHERE member_id = #{memberId}
		AND work_date = #{workDate}
	</select>
	
	<!-- 근태 지각, 조퇴, 연차 출력 -->
	<select id="getWorkCheckList"
			parameterType="java.util.Map"
			resultType="java.util.Map">
		SELECT w.member_id memberId, m.member_name memberName, COUNT(case when HOUR(w.work_begin) &gt;= 9 then 1 END) workBeginLate, COUNT(case when HOUR(w.work_end) &lt; 18 then 1 END) workEndFast, COUNT(case when w.work_annual = 'Y' then 1 END) useAnnual
		FROM work w INNER JOIN member m
		ON w.member_id = m.member_id
		INNER JOIN department d
		ON m.department_no = d.department_no
		WHERE d.department_no = #{departmentNo}
		OR d.department_parent_no = #{departmentNo}
		AND YEAR(w.work_date) = #{targetYear}
		AND MONTH(w.work_date) = #{targetMonth}
		GROUP BY m.member_id
		ORDER BY d.department_no DESC, m.member_rank DESC
	</select>
	
	<!-- 근태 관리 출력 -->
	<select id="getWorkCheckInfoList"
			parameterType="java.util.Map"
			resultType="com.goodee.groupware.vo.Work">
		SELECT a.department_no departmentNo, a.member_id memberId, a.member_name memberName, a.member_rank memberRank, b.work_begin workBegin, b.work_end workEnd, b.work_date workDate, b.work_annual workAnnual
		FROM (
			SELECT d.department_no, m.member_id, m.member_rank, m.member_name
			FROM member m INNER JOIN department d
			ON m.department_no = d.department_no
			WHERE d.department_no = #{departmentNo}
			OR d.department_parent_no = #{departmentNo}) a
		LEFT outer JOIN (
			SELECT member_id, work_begin, work_end, work_date, work_annual
			from work
			WHERE YEAR(work_date) = #{targetYear}
			AND MONTH(work_date) = #{targetMonth}
			AND DAY(work_date) = #{targetDate}) b
		ON b.member_id = a.member_id
	</select>
	
</mapper>