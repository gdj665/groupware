<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.goodee.groupware.mapper.HrmMapper">
	<!-- member 상세보기 -->
	<select id="getOneMember"
			parameterType="String"
			resultType="com.goodee.groupware.vo.Member">
	SELECT member_id memberId, department_no departmentNo, member_name memberName, member_address memberAddress, member_email memberEmail, member_birth memberBirth,
			member_gender memberGender,	member_phone memberPhone, member_sign_file memberSignFile, member_rank memberRank, member_level memberLevel, member_hiredate memberHiredate
	FROM member
	WHERE member_id = #{memberId}
	</select>
	
	<!-- 사원 리스트 출력 -->
	<select id="getMemberList"
			resultType="java.util.Map">
		SELECT m.member_id memberId, m.department_no departmentNo, m.member_name memberName, m.member_level memberLevel, d.department_parent_no departmentParentNo, d.department_id departmentId
		FROM member m INNER JOIN department d ON m.department_no = d.department_no
		ORDER BY departmentNo ASC, memberLevel DESC
	</select>
	
	<!-- 사원 추가 -->
	<insert id="addMember" parameterType="com.goodee.groupware.vo.Member">
		INSERT INTO member(
			member_id,
			department_no,
			member_pw,
			member_name,
			member_address,
			member_email,
			member_birth,
			member_gender,
			member_phone,
			member_rank,
			member_level,
			member_hiredate,
			createdate,
			updatedate
		) VALUES(
			#{memberId},
			#{departmentNo},
			#{memberPw},
			#{memberName},
			#{memberAddress},
			#{memberEmail},
			#{memberBirth},
			#{memberGender},
			#{memberPhone},
			#{memberRank},
			#{memberLevel},
			#{memberHiredate},
			NOW(),
			NOW()
		)
	</insert>
	
	<!-- 입사날짜 사원 아이디 생성시 마지막번호 출력 -->
	<select id="getLastMemberId" parameterType="com.goodee.groupware.vo.Member" resultType="int">
		SELECT COUNT(*) FROM member WHERE member_id LIKE '%' #{memberId} '%';
	</select>
	
	<!-- 사원상세보기 -->
	<select id="getOneMember2" parameterType="String" resultType="java.util.Map">
	SELECT m.member_id memberId, d.department_Id departmentId, d.department_parent_no departmentParentNo, m.member_name memberName, m.member_address memberAddress, m.member_email memberEmail, m.member_birth memberBirth, m.member_gender memberGender, m.member_phone memberPhone, m.member_rank memberRank, m.member_level memberLevel, m.member_hiredate memberHiredate 
	FROM member m INNER JOIN department d ON m.department_no = d.department_no 
	WHERE m.member_id = #{memberId}
	</select>
	
	<!-- 사원 직급 레벨 수정 -->
	<update id="updateMember" parameterType="com.goodee.groupware.vo.Member">
	 	UPDATE member 
	 	SET member_rank = #{memberRank}, member_level = #{memberLevel}
	 	WHERE member_id = #{memberId}
	</update>
	
	<!-- 퇴사하기 -->
	<update id="deleteMember" parameterType="com.goodee.groupware.vo.Member">
		UPDATE member 
		SET department_no = #{departmentNo}, member_level = #{memberLevel}
		WHERE member_id = #{memberId}
	</update>
	
</mapper>