<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.goodee.groupware.mapper.RepairMapper">
	<!-- 1) repair테이블에 접수추가 -->
	<insert id="addRepair" parameterType="com.goodee.groupware.vo.Repair">
		INSERT INTO repair(
				repair_product_category, 
				repair_product_name, 
				receiving_date, 
				repair_status, 
				repair_receiving_reason, 
				createdate, 
				updatedate
		)
		VALUES(
				#{repairProductCategory}, 
				#{repairProductName}, 
				#{receivingDate}, 
				'대기중',  
				#{repairReceivingReason}, 
				NOW(), 
				NOW()
		)
	</insert>
	<!-- 2) as목록 리스트 (대기중, 수리중, 수리완료로 나뉨 -->
	<select id="getRepairList" resultType="java.util.Map" parameterType="java.util.Map">
		SELECT 
			repair_no repairNo,
			member_id memberId,
			repair_product_category repairProductCategory,
			repair_product_name repairProductName,
			receiving_date receivingDate,
			repair_date repairDate,
			repair_release_date repairReleaseDate,
			repair_price repairPrice,
			repair_status repairStatus,
			repair_receiving_reason repairReceivingReason,
			repair_content repairContent,
			createdate createdate,
			updatedate updatedate
		FROM repair
		<where>
			repair_status = #{repairStatus}
			<if test="repairProductCategory != null">
				AND	repair_product_category LIKE '%' #{repairProductCategory} '%'
			</if>
		</where>
		ORDER BY createdate DESC
		LIMIT #{beginRow}, #{rowPerPage}
	</select>
	
	<!-- 2.1) as목록 리스트 (대기중, 수리중, 수리완료로 나뉨) 총 행의 개수 -->
	<select id="getRepairListCnt" parameterType="java.util.Map">
		SELECT 
			COUNT(*)
		FROM repair
		<where>
			repair_status = #{repairStatus}
			<if test="repairProductCategory != null">
				AND	repair_product_category LIKE '%' #{repairProductCategory} '%'
			</if>
		</where>
	</select>
	
	<!-- 3) repair 대기중 -> 수리중 -> 수리완료 수정 -->
	<update id="updateRepair" parameterType="com.goodee.groupware.vo.Repair">
		<!-- 대기중 -> 수리중 member_id, repair_date 업데이트 -->
		<if test="memberId != null">
			UPDATE repair SET member_id = #{memberId}, repair_date = now(), repair_status = '수리중', updatedate = now()
			WHERE repair_no = #{repairNo}
		</if>
		
		<!-- 수리중 -> 수리완료 repair_release_date, repair_price, repair_status, repair_content 업데이트 -->
		<if test="repairContent != null">
			UPDATE repair SET repair_release_date = now(), repair_price = #{repairPrice}, repair_status = '수리완료', repair_content = #{repairContent}, updatedate = now()
			WHERE repair_no = #{repairNo}
		</if>
	</update>
	
	<!-- 3.1) 수리완료시 repair_parts(수리 자재사용 테이블)추가 -->
	<insert id="addRepairParts" parameterType="java.util.Map">
		INSERT  INTO repair_parts
			(repair_no, parts_no, repair_parts_cnt, createdate, updatedate)
		VALUES(#{repairNo}, #{partsNo}, #{repairPartsCnt}, NOW(), NOW())
	</insert>
	
</mapper>