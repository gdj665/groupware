<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.goodee.groupware.mapper.BoardMapper">
	
	<!-- 1) 부서 게시판 리스트출력 -->
	<select id = "getBoardList" parameterType="java.util.Map" resultType="java.util.Map">
		SELECT 
		    board_no AS boardNo, 
		    m.member_name AS memberName,
		    CASE WHEN CHAR_LENGTH(board_title) > 10 THEN CONCAT(LEFT(board_title, 10), '...') ELSE board_title END AS boardTitle,
		    CASE WHEN CHAR_LENGTH(board_content) > 10 THEN CONCAT(LEFT(board_content, 10), '...') ELSE board_content END AS boardContent,
		    b.createdate
		FROM board b
		JOIN member m ON b.member_id = m.member_id
		<where>
			b.department_no = #{departmentNo}
			<!-- 제목 검색 -->
			<if test="searchWord != null and searchWord != ''">
				AND b.board_title LIKE '%' #{searchWord} '%'
			</if>
		</where>
		ORDER BY b.board_status ASC, b.createdate DESC
		LIMIT #{beginRow},#{rowPerPage}
	</select>
	
	<!-- 1.1) 게시판에 따른 게시판 행 갯수 출력 -->
	<select id="getBoardListCount" parameterType="java.util.Map" resultType="int">
		SELECT
			COUNT(*)
		FROM board
		<where>
			department_no = #{departmentNo}
			<!-- 제목 검색 -->
			<if test="searchWord != null and searchWord != ''">
				AND board_title LIKE '%' #{searchWord} '%'
			</if>
		</where>
	</select>
	
	<!-- 2.) 게시판 상세출력 -->
	<select id = "getOneBoard" parameterType="com.goodee.groupware.vo.Board" resultType="java.util.Map">
		SELECT 
			b.board_no AS boardNo,
			b.member_id AS memberId,
			m.member_name AS memberName,
			b.board_title AS boardTitle,
			b.board_content AS boardContent,
			b.department_no AS departmentNo,
			b.board_status AS boardStatus,
			b.createdate AS createdate,
			b.updatedate AS updatedate
		FROM board b
		JOIN member m ON b.member_id = m.member_id
		WHERE b.board_no = #{boardNo}

	</select>
	
	<!-- 3.) 게시판 삭제 -->
	<delete id="deleteBoard" parameterType="com.goodee.groupware.vo.Board">
		DELETE 
		FROM board
		WHERE board_no = #{boardNo}
		AND (member_id = #{memberId}
		OR member_id = '00000000')
	</delete>
	
	<!-- 4.) 게시판 추가 -->
	<insert id ="addBoard" parameterType="com.goodee.groupware.vo.Board">
		<!-- INSERT 작업 이후에 실행되며 Board vo에 boardNo로 선언되어 있는 값을 가져온다 -->
		<selectKey order="AFTER" keyProperty="boardNo" resultType="int">
			SELECT last_insert_id()
		</selectKey>
		INSERT INTO board(
			member_id,
			board_title,
			board_content,
			department_no,
			board_status,
			createdate,
			updatedate
		) VALUES(
			#{memberId},
			#{boardTitle},
			#{boardContent},
			#{departmentNo},
			#{boardStatus},
			NOW(),
			NOW()
		)
	</insert>
	
</mapper>